---
import { z } from "astro:content";
import Show from "../control-flow/Show.astro";
import styles from "./Parameter.module.css";
import { ParameterSchema } from "../../content/sassdoc-schema";
import Chip from "../chip/Chip.astro";
import { getLangFromEnv, useTranslations } from "../../i18n/utils";

type Parameters = z.infer<typeof ParameterSchema>;

export interface Props {
  items?: Parameters[];
}

const { items } = Astro.props;

const lang = getLangFromEnv();
const t = useTranslations(lang);
---

<Show condition={items}>
  <section data-pagefind-ignore class={styles.container}>
    <h5>{t("parameters.title")}</h5>
    <div class={styles.tableContainer}>
      <table>
        <thead>
          <tr>
            <th id="name" scope="col">{t("parameters.name")}</th>
            <th id="type" scope="col">{t("parameters.type")}</th>
            <th id="value" scope="col" class={styles.type}>{t("parameters.default")}</th>
            <th id="desc" scope="col">{t("parameters.description")}</th>
          </tr>
        </thead>
        <tbody>
          {
            items?.map(({ name, type, default: def, description: desc }) => (
              <tr>
                <td headers="name" class={styles.name}>
                  ${name}
                  {!def && <span class={styles.required}>*</span>}
                </td>
                <td headers="type">
                  <Chip type="default">{type}</Chip>
                </td>
                <td headers="value" class={styles.type}>
                  {def || "-"}
                </td>
                <td headers="desc" class="description">
                  {desc &&
                    desc.replace(/\s?\((?:required|optional)\)\.?$/, ".")}
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </section>
</Show>
